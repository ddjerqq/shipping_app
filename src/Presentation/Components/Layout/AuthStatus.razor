@using Application.Common
@using Domain.Common
@using Domain.ValueObjects
@using Presentation.Components.Ui.Avatar
@inject CookieService Cookie
@inject IdentityRevalidatingAuthenticationStateProvider AuthenticationStateProvider

<AuthorizeView>
    <Authorized>
        <Button Variant="outline" class="px-3 w-9 sm:w-auto !h-9 flex-shrink-0" data-dropdown-toggle="auth-dropdown">
            <Blazicon Svg="@Lucide.User" class="!size-6"/>

            <span class="hidden sm:block max-w-[120px] text-nowrap truncate">
                @context.User.GetUsername()?.CapitalizeName()
            </span>
        </Button>

        <div id="auth-dropdown" class="z-10 hidden divide-y divide-background-100 rounded-lg shadow w-44 border bg-background">
            <div class="px-4 py-3 text-sm">
                <div>@context.User.GetUsername()?.CapitalizeName()</div>
                <div class="font-medium text-xs text-muted-foreground truncate">
                    @context.User.GetEmail()
                </div>

                <div class="font-medium text-xs text-muted-foreground truncate">
                    @if (context.User.GetRole() == Role.User)
                    {
                        @:@Locale.room_code: @context.User.GetRoomCode()
                    }
                    else
                    {
                        @:@Locale.role: @context.User.GetRole()
                    }
                </div>
            </div>

            <nav class="py-2 text-sm">
                <Button Href="/auth/manage" Variant="ghost" class="shadow-none justify-start w-full rounded-none">
                    @Locale.manage_account
                </Button>
            </nav>

            <div class="py-2">
                <Button Variant="ghost" class="justify-start text-destructive hover:text-destructive w-full rounded-none"
                        @onclick="@SignOut">
                    <Blazicon Svg="@Icons.LogOut"/>
                    @Locale.sign_out
                </Button>
            </div>
        </div>
    </Authorized>

    <NotAuthorized>
        <div class="flex align-middle gap-2">
            <Button Href="/auth/login" Size="sm" Variant="default" class="flex sm:hidden">
                @Locale.enter
            </Button>

            <Button Href="/auth/login" Size="sm" Variant="outline" class="hidden sm:flex">
                @Locale.login
            </Button>

            <Button Href="/auth/register" Size="sm" Variant="default" class="hidden sm:flex">
                @Locale.signup
            </Button>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    private async Task SignOut()
    {
        await Cookie.DeleteCookieAsync(JwtGenerator.CookieName);
        AuthenticationStateProvider.ForceSignOut();
        NavigationManager.NavigateTo("/auth/login");
    }
}