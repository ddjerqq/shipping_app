@using System.Globalization
@using Application.Services
@using Presentation.Common
@attribute [StreamRendering]
@inject IConfiguration Configuration
@inject IAppDbContext DbContext
@inject ICurrentUserAccessor CurrentUserAccessor

<Button Variant="outline" Size="sm" class="relative hidden sm:flex" @onclick="@(() => SetNextCultureAsync())">
    <img class="size-4" src="@($"/images/{CurrentCulture}.svg")" alt="@Cultures[CurrentCulture.Name]"/>
    @Cultures[CurrentCulture.Name]
</Button>

@code {
    private CultureInfo CurrentCulture { get; set; } = CultureInfo.CurrentCulture;
    private Dictionary<string, string?> Cultures { get; set; } = new();

    protected override void OnInitialized()
    {
        Cultures = Configuration.GetSupportedCultures();
        CurrentCulture = CultureInfo.CurrentCulture;
    }

    private async Task SetNextCultureAsync()
    {
        // advance
        var culture = Cultures
            .Keys
            .SkipWhile(c => c != CurrentCulture.Name)
            .Skip(1)
            .DefaultIfEmpty(Cultures.Keys.First())
            .First();

        CurrentCulture = CultureInfo.GetCultureInfo(culture);
        CultureInfo.DefaultThreadCurrentCulture = CurrentCulture;
        CultureInfo.DefaultThreadCurrentUICulture = CurrentCulture;

        // anonymous users can also change the culture
        var currentUser = await CurrentUserAccessor.TryGetCurrentUserAsync(CancellationToken);
        if (currentUser is not null)
        {
            currentUser.CultureInfo = CurrentCulture;
            await DbContext.SaveChangesAsync(CancellationToken);
        }

        var currentUri = new Uri(NavigationManager.Uri).GetComponents(UriComponents.PathAndQuery, UriFormat.UriEscaped);
        var query = $"?culture={Uri.EscapeDataString(CurrentCulture.Name)}&redirectUri={Uri.EscapeDataString(currentUri)}";

        NavigationManager.NavigateTo("/set_culture" + query, true);
    }
}