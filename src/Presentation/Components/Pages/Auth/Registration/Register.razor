@page "/auth/register"
@using System.Globalization
@using Application.Cqrs.Users.Commands
@using Domain.ValueObjects
@inject CookieService Cookie

<PageTitle>@Locale.signup</PageTitle>
<PageHeader Title="@Locale.create_an_account"/>

<AppForm @bind-Model="Command" OnValidSubmit="RegisterUser">
    <FormField>
        <FormLabel for="full-name">@Locale.full_name</FormLabel>
        <FormInputText id="full-name"
                       @bind-Value="@Command.FullName"
                       placeholder="@Locale.full_name"
                       type="text"
                       required
                       autocomplete="name"
                       disabled="@IsLoading"/>

        <FormInvalidFeedback For="@(() => Command.FullName)"/>
    </FormField>

    <FormField>
        <FormLabel for="email">@Locale.email</FormLabel>
        <FormInputText id="email"
                       @bind-Value="@Command.Email"
                       placeholder="name@example.com"
                       type="email"
                       required
                       autocomplete="email"
                       disabled="@IsLoading"/>

        <FormInvalidFeedback For="@(() => Command.Email)"/>
    </FormField>

    <FormField>
        <FormLabel for="password">@Locale.password</FormLabel>
        <FormInputText id="password"
                       @bind-Value="@Command.Password"
                       placeholder="@Locale.password"
                       type="password"
                       required
                       autocomplete="new-password"
                       disabled="@IsLoading"/>

        <FormInvalidFeedback For="@(() => Command.Password)"/>
    </FormField>

    <Button type="submit" disabled="@IsLoading">
        @if (IsLoading)
        {
            <Blazicon Svg="Icons.Loader" class="mr-2 size-4 animate-spin"/>
        }
        else
        {
            <Blazicon Svg="@Lucide.ClipboardCheck"/>
        }
        @Locale.signup
    </Button>

    <HorizontalDivider>
        @Locale.already_have_an_account
    </HorizontalDivider>

    <Button Href="/auth/login" Variant="outline" type="button" class="w-full">
        <Blazicon Svg="@Lucide.LogIn"/>
        @Locale.login
    </Button>

    <FormField>
        <AuthAgreeToTerms/>
    </FormField>
</AppForm>

@code {
    [CascadingParameter]
    private TimeZoneInfo? BrowserTimeZone { get; set; }

    [CascadingParameter]
    private CultureInfo? BrowserLocale { get; set; }

    private RegisterCommand Command { get; set; } = new();
    // private Recaptcha RecaptchaComponent { get; set; }

    public async Task RegisterUser(EditContext editContext)
    {
        // if (!await RecaptchaComponent.IsValid())
        // {
        //     ShowWarning(Locale.please_complete_captcha_before_continuing);
        //     return;
        // }

        Command.TimeZoneInfo = BrowserTimeZone ?? TimeZoneInfo.Utc;
        Command.CultureInfo = BrowserLocale ?? new CultureInfo("en-US");

        var user = await SendCommandAsync(Command);

        var loginCommand = new LoginCommand
        {
            Email = user.Email,
            Password = Command.Password,
            TimeZoneInfo = Command.TimeZoneInfo,
        };

        var result = await SendCommandAsync(loginCommand);
        switch (result)
        {
            case null:
                ShowError("Invalid credentials.");
                return;
            case (true, _, _):
                NavigationManager.NavigateTo("/auth/lockout");
                return;
            default:
                await Cookie.SetCookieAsync(JwtGenerator.CookieName, result.Value.Token!);
                var url = user.Role switch
                {
                    Role.User => "/user_dashboard",
                    Role.Staff => "/staff_dashboard",
                    Role.Admin => "/admin_dashboard",
                    _ => "/",
                };
                NavigationManager.NavigateTo(url, true);
                break;
        }
    }
}