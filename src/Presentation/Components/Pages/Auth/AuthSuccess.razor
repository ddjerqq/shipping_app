@page "/auth/success"
@inject CookieService Cookie

@code {
    [SupplyParameterFromQuery(Name = "returnUrl")]
    public string? ReturnUrl { get; set; }

    [SupplyParameterFromQuery(Name = "token")]
    public string Token { get; set; } = null!;

    [SupplyParameterFromQuery(Name = "role")]
    public string? Role { get; set; } = "User";

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();

        if (string.IsNullOrEmpty(Token))
        {
            NavigationManager.NavigateTo("/auth/login", true);
            return;
        }

        await Cookie.SetCookieAsync(JwtGenerator.CookieName, Token);

        var url = Role switch
        {
            nameof(Domain.ValueObjects.Role.User) => "/user_dashboard",
            nameof(Domain.ValueObjects.Role.Staff) => "/staff_dashboard",
            nameof(Domain.ValueObjects.Role.Admin) => "/admin_dashboard",
            _ => "/",
        };

        if (!string.IsNullOrWhiteSpace(ReturnUrl))
            url = ReturnUrl;

        NavigationManager.NavigateTo(url, true);
    }
}