@using Application.Services
@using Domain.Aggregates
@inject ICurrentUserAccessor CurrentUser
@inject IAppDbContext DbContext

<AppForm @bind-Model="User" OnValidSubmit="UpdateUser">
    <FormField>
        <div class="flex flex-row items-center gap-2">
            <Switch id="sms" @bind-Value="User.NotifyBySms"/>
            <FormLabel for="sms">@Locale.receive_sms_notifications</FormLabel>
        </div>
    </FormField>

    <Button type="submit" disabled="@IsLoading">
        @if (IsLoading)
        {
            <Blazicon Svg="Icons.Loader" class="mr-2 size-4 animate-spin"/>
        }
        @Locale.save_preferences
    </Button>
</AppForm>

@code {
    private User User { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        User = await CurrentUser.GetCurrentUserAsync(CancellationToken);
    }

    private async Task UpdateUser()
    {
        DbContext.Users.Update(User);
        await DbContext.SaveChangesAsync(CancellationToken);
        ShowSuccess(Locale.your_preferences_have_been_saved);
    }
}
