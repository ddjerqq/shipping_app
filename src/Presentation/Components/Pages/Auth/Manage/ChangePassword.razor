@using Application.Cqrs.Users.Commands
@using Application.Services
@inject ICurrentUserAccessor CurrentUser
@inject IAppDbContext DbContext
@inject CookieService Cookie
@inject IdentityRevalidatingAuthenticationStateProvider AuthenticationStateProvider

<AppForm @bind-Model="Command" OnValidSubmit="OnValidSubmit">
    <FormField>
        <FormLabel for="current-password">Current password</FormLabel>
        <FormInputText id="current-password"
                       @bind-Value="@Command.CurrentPassword"
                       type="@(ShowPassword ? "text" : "password")"
                       autocomplete="current-password"
                       placeholder="Enter current password"
                       required
                       disabled="@IsLoading"/>
        <FormInvalidFeedback For="@(() => Command.CurrentPassword)"/>
    </FormField>

    <FormField>
        <FormLabel for="new-password">New password</FormLabel>
        <FormInputText id="new-password"
                       @bind-Value="@Command.NewPassword"
                       type="@(ShowPassword ? "text" : "password")"
                       autocomplete="new-password"
                       placeholder="Enter new password"
                       required
                       disabled="@IsLoading"/>
        <FormInvalidFeedback For="@(() => Command.NewPassword)"/>
    </FormField>

    <FormField>
        <FormLabel for="confirm-new-password">Confirm new password</FormLabel>
        <FormInputText id="confirm-new-password"
                       @bind-Value="@Command.ConfirmNewPassword"
                       type="@(ShowPassword ? "text" : "password")"
                       autocomplete="new-password"
                       placeholder="Confirm new password"
                       required
                       disabled="@IsLoading"/>
        <FormInvalidFeedback For="@(() => Command.ConfirmNewPassword)"/>
    </FormField>

    <FormField>
        <div class="flex flex-row items-center gap-2">
            <Switch id="show" @bind-Value="ShowPassword"/>
            <FormLabel for="show">Show password</FormLabel>
        </div>
    </FormField>

    <FormDescription>
        If you forgot your password, <Link Title="reset" Href="/auth/reset_password"/>
    </FormDescription>

    <Button type="submit" disabled="@IsLoading">
        @if (IsLoading)
        {
            <Blazicon Svg="Icons.Loader" class="mr-2 size-4 animate-spin"/>
        }
        Change password
    </Button>
</AppForm>

@code {
    private bool ShowPassword { get; set; }
    private ChangePasswordCommand Command { get; set; } = new();

    private async Task OnValidSubmit()
    {
        await SendCommandAsync(Command);
        ShowSuccess("Your password has been successfully changed!");
        await Task.Delay(2000);

        await Cookie.DeleteCookieAsync(JwtGenerator.CookieName);
        AuthenticationStateProvider.ForceSignOut();
        NavigationManager.NavigateTo("/auth/login");
    }
}
