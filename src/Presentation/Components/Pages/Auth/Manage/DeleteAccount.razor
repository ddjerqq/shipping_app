@using Application.Cqrs.Users.Commands
@using Application.Services
@inject IAppDbContext DbContext
@inject ICurrentUserAccessor CurrentUser
@inject CookieService Cookie
@inject IdentityRevalidatingAuthenticationStateProvider AuthenticationStateProvider

<FormField class="mb-2">
    <FormLabel for="delete-confirmation">@Locale.account_delete_confirmation</FormLabel>
    <input id="delete-confirmation"
           class="@FormInputText.BaseClass"
           @bind-value="@DeleteConfirmation"
           @bind-value:event="oninput"
           placeholder="@Locale.type_delete_to_confirm"
           type="text"/>
    <FormDescription class="text-destructive">
        @((MarkupString)Locale.delete_warning)
    </FormDescription>
</FormField>

<Button Variant="destructive" disabled="@(DeleteConfirmation != "delete")" @onclick="Delete">
    @Locale.delete_account
</Button>

@code {
    private string DeleteConfirmation { get; set; } = null!;

    private async Task Delete()
    {
        await SendCommandAsync(new DeleteUserAccountCommand(CurrentUser.Id!.Value));
        ShowSuccess(Locale.your_account_is_scheduled_for_deletion);
        await Task.Delay(2000);

        await Cookie.DeleteCookieAsync(JwtGenerator.CookieName);
        AuthenticationStateProvider.ForceSignOut();
        NavigationManager.NavigateTo("/auth/delete_confirmation");
    }
}
