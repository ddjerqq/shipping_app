@page "/auth/login"
@using Application.Cqrs.Users.Commands
@using Presentation.Components.Ui.Form
@inject CookieService Cookie
@attribute [AllowAnonymous]

<PageTitle>Log in</PageTitle>

<div class="flex flex-col space-y-2 text-start">
    <h1 class="text-2xl font-semibold tracking-tight">
        Log in to your account
    </h1>
</div>

<div class="grid gap-6">
    <AppForm @bind-Model="Command" OnValidSubmit="LoginUser" method="POST" FormName="login" novalidate class="grid gap-4">
        <FormField>
            <FormLabel for="email">Email</FormLabel>
            <FormInputText id="email"
                           @bind-Value="@Command.Email"
                           placeholder="name@example.com"
                           type="email"
                           required
                           autocomplete="email"
                           disabled="@IsLoading"/>

            <FormInvalidFeedback For="@(() => Command.Email)"/>
        </FormField>

        <FormField>
            <FormLabel for="password">Password</FormLabel>
            <FormInputText id="password"
                           @bind-Value="@Command.Password"
                           placeholder="Enter password"
                           type="password"
                           required
                           autocomplete="current-password"
                           disabled="@IsLoading"/>

            <FormInvalidFeedback For="@(() => Command.Password)"/>
        </FormField>

        <FormDescription Class="w-full flex justify-between">
            <a href="/auth/forgot" class="underline underline-offset-4 hover:text-primary">
                Forgot password?
            </a>
            <a href="/auth/resend_email_confirmation" class="underline underline-offset-4 hover:text-primary">
                Resend email confirmation
            </a>
        </FormDescription>

        <Button type="submit" disabled="@IsLoading">
            @if (IsLoading)
            {
                <Blazicon Svg="Loader" class="mr-2 h-4 w-4 animate-spin"/>
            }
            Login
        </Button>

        <Button
            Href="@(NavigationManager.GetUriWithQueryParameters("auth/register", new Dictionary<string, object?> { ["returnUrl"] = ReturnUrl }))"
            Variant="outline" disabled="@IsLoading">
            @if (IsLoading)
            {
                <Blazicon Svg="Loader" class="mr-2 h-4 w-4 animate-spin"/>
            }
            Register
        </Button>
    </AppForm>
</div>

@code {
    [CascadingParameter]
    private TimeZoneInfo BrowserTimeZone { get; set; } = default!;

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    [SupplyParameterFromForm]
    private LoginCommand Command { get; set; } = new();

    private bool IsLoading { get; set; }

    public async Task LoginUser()
    {
        Command.TimeZoneInfo = BrowserTimeZone;

        IsLoading = true;
        var result = await Mediator.Send(Command);
        IsLoading = false;

        if (result is not null)
        {
            await Cookie.SetCookieAsync(JwtGenerator.CookieName, result.Value.Token!);
            NavigationManager.NavigateTo(ReturnUrl ?? "/");
        }
        else if (result is (true, _, _))
            NavigationManager.NavigateTo("account/lockout");
        else
            Toast.ShowError("Invalid credentials.");
    }
}