@page "/auth/reset_password"
@using Application.Cqrs.Users.Commands
@using Presentation.Components.Ui.Form
@attribute [AllowAnonymous]

<PageTitle>Reset password</PageTitle>

<AuthHeader Title="Reset password"/>

<AppForm @bind-Model="Command" OnValidSubmit="OnValidSubmitAsync" method="POST" novalidate class="grid gap-6">
    <FormField>
        <FormLabel for="new-password">New password</FormLabel>
        <FormInputText id="new-password"
                       @bind-Value="@Command.NewPassword"
                       type="password"
                       required
                       autocomplete="new-password"
                       disabled="@IsLoading"/>

        <FormInvalidFeedback For="@(() => Command.NewPassword)"/>
    </FormField>

    <Button type="submit" disabled="@IsLoading">
        @if (IsLoading)
        {
            <Blazicon Svg="Icons.Loader" class="mr-2 size-4 animate-spin"/>
        }
        Reset
    </Button>
</AppForm>

@code {
    [SupplyParameterFromQuery]
    private string? Token { get; set; }

    private ResetPasswordCommand Command { get; set; } = new();
    private bool IsLoading { get; set; }

    protected override void OnInitialized()
    {
        if (Token is null)
        {
            NavigationManager.NavigateTo("auth/invalid_password_reset");
            return;
        }

        Command.Token = Token;
    }

    private async Task OnValidSubmitAsync()
    {
        IsLoading = true;
        await Mediator.Send(Command);
        IsLoading = false;
    }
}