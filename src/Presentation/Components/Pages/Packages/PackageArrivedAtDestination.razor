@page "/packages/arrived"
@using Application.Cqrs.Packages.Commands
@attribute [Authorize(Roles = "Staff,Admin")]

<PageTitle>Package arrived at destination</PageTitle>

<Card>
    <Header>
        <CardTitle>Package arrived at destination</CardTitle>
    </Header>
    <Content>
        <AppForm @bind-Model="Command" OnValidSubmit="OnValidSubmit">
            <FormField>
                <FormLabel for="tracking-code">Tracking code</FormLabel>
                <FormInputText id="tracking-code"
                               disabled="@(ParametersSuppliedFromQuery || IsLoading)"
                               @bind-Value="@Command.TrackingCode"
                               placeholder="Enter tracking code"
                               required/>
                <FormDescription>The tracking code, as present on the package</FormDescription>
                <FormInvalidFeedback For="@(() => Command.TrackingCode)"/>
            </FormField>

            <Button type="submit" disabled="@IsLoading">
                <Blazicon Svg="Icons.Check" class="mr-2 size-4"/>
                Mark as arrived
            </Button>
        </AppForm>
    </Content>
</Card>

@code {
    [SupplyParameterFromQuery(Name = "code")]
    public string? TrackingCode { get; set; }

    private bool ParametersSuppliedFromQuery => !string.IsNullOrWhiteSpace(TrackingCode);

    private ReceivePackageAtDestinationCommand Command { get; set; } = new();

    protected override void OnParametersSet()
    {
        Command = new ReceivePackageAtDestinationCommand
        {
            TrackingCode = TrackingCode ?? string.Empty,
        };
    }

    private async Task OnValidSubmit()
    {
        await SendCommandAsync(Command);
        ShowSuccess("The package is saved in the system!");

        if (ParametersSuppliedFromQuery)
        {
            await Task.Delay(1000, CancellationToken);
            NavigationManager.NavigateTo("/packages/all?status=InTransit");
        }

        Command = new ReceivePackageAtDestinationCommand();
    }
}
