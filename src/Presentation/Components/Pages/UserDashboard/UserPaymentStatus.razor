@using Application.Services
@using Blazored.Modal.Services
@using Domain.ValueObjects
@using Domain.Aggregates
@inject ICurrentUserAccessor CurrentUser
@inject IModalService Modal
@attribute [StreamRendering]

<div class="grid gap-4 md:grid-cols-2 lg:grid-cols-4">
    <Card>
        <Header class="flex flex-row items-center justify-between">
            <CardTitle>Your balance</CardTitle>
            <Blazicon Svg="@Icons.DollarSign" class="text-muted-foreground size-4"/>
        </Header>
        <Content class="text-2xl font-bold">
            @User.Balance.FormatedValue
        </Content>
        <Footer class="text-muted-foreground text-xs">
            Your balance
        </Footer>
    </Card>

    <Card>
        <Header class="flex flex-row items-center justify-between">
            <CardTitle>Total amount due</CardTitle>
            <Blazicon Svg="@Icons.Minus" class="text-muted-foreground size-4"/>
        </Header>
        <Content class="@("text-2xl font-bold " + (AmountDue.Amount > 0 ? "text-red-700 dark:text-red-400" : ""))">
            @AmountDue.FormatedValue
        </Content>
        <Footer class="text-muted-foreground text-xs">
            Total amount to pay for shipping
        </Footer>
    </Card>

    <Card>
        <Header class="flex flex-row items-center justify-between">
            <CardTitle>Your packages</CardTitle>
            <Blazicon Svg="@Icons.Truck" class="text-muted-foreground size-4"/>
        </Header>
        <Content class="text-2xl font-bold">
            @User.ReceivedPackages.Count
        </Content>
        <Footer class="text-muted-foreground text-xs">
            The total amount of packages you have ever ordered
        </Footer>
    </Card>

    <Card>
        <Header class="flex flex-row items-center justify-between">
            <CardTitle>Top up balance</CardTitle>
            <Blazicon Svg="@Icons.CreditCard" class="text-muted-foreground size-4"/>
        </Header>
        <Content>
            <Button @onclick="@(OpenTopUpModal)">
                Top up balance
            </Button>
        </Content>
        <Footer class="text-muted-foreground text-xs">
            Your payment info is secure
        </Footer>
    </Card>
</div>

@code {
    private User User { get; set; } = null!;

    private Money AmountDue => new(
        PackagePrice.DefaultCurrency,
        User.ReceivedPackages
            .Where(p => !p.IsPaid)
            .Where(p => p.CurrentStatus.Status is PackageStatus.Arrived)
            .Sum(p => p.Price!.TotalPrice.Amount));

    protected override async Task OnInitializedAsync()
    {
        User = await CurrentUser.GetCurrentUserAsync(CancellationToken);
    }

    private async Task OpenTopUpModal()
    {
        var modal = Modal.Show<TopUpModal>();
        await modal.Result;
    }
}
