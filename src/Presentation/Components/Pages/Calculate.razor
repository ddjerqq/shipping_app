@page "/calculate"
@using Application.Cqrs.Packages.Commands
@attribute [AllowAnonymous]

<PageTitle>Calculate package price</PageTitle>
<PageHeader Title="Calculate the price for your package"/>

<Card class="mt-4">
    <Header>
        <Description>Enter the required parameters of the parcel and the calculator will calculate the cost of the delivery</Description>
    </Header>

    <Content>
        <AppForm @bind-Model="Command">
            <FormField>
                <FormLabel for="weight">Weight (KG)</FormLabel>
                <InputNumber id="weight"
                             class="@FormInputText.BaseClass"
                             @bind-Value="@Command.WeightKiloGrams"
                             type="number"
                             min="0"
                             step="100"
                             max="1000"
                             required
                             disabled="@IsLoading"/>
                <FormDescription class="text-xs">
                    Please keep in mind, the weight will get rounded up to the nearest 100 grams.
                </FormDescription>
                <FormInvalidFeedback For="@(() => Command.WeightKiloGrams)"/>
            </FormField>

            <InlineFormFieldContainer class="mt-2 sm:grid-cols-3">
                <FormField>
                    <FormLabel for="y">Width (cm)</FormLabel>
                    <InputNumber id="y"
                                 class="@FormInputText.BaseClass"
                                 @bind-Value="@Command.Width"
                                 type="number"
                                 step="0.1"
                                 min="0"
                                 max="100"
                                 disabled="@IsLoading"/>
                    <FormInvalidFeedback For="@(() => Command.Width)"/>
                </FormField>

                <FormField>
                    <FormLabel for="z">Height (cm)</FormLabel>
                    <InputNumber id="z"
                                 class="@FormInputText.BaseClass"
                                 @bind-Value="@Command.Height"
                                 type="number"
                                 step="0.1"
                                 min="0"
                                 max="100"
                                 disabled="@IsLoading"/>
                    <FormInvalidFeedback For="@(() => Command.Height)"/>
                </FormField>

                <FormField>
                    <FormLabel for="x">Length (cm)</FormLabel>
                    <InputNumber id="x"
                                 class="@FormInputText.BaseClass"
                                 @bind-Value="@Command.Length"
                                 type="number"
                                 step="0.1"
                                 min="0"
                                 max="100"
                                 disabled="@IsLoading"/>
                    <FormInvalidFeedback For="@(() => Command.Length)"/>
                </FormField>

                <FormDescription class="col-span-3">
                    To find out more about volumetric weight and how it's calculated please visit our
                    <Link Href="/faq" Title="FAQ"/>
                </FormDescription>
            </InlineFormFieldContainer>

            <FormField>
                <FormLabel for="house-delivery">House delivery?</FormLabel>
                <Switch id="house-delivery"
                        @bind-Value="@Command.IsHouseDelivery"
                        disabled="@IsLoading"/>
                <FormDescription>
                    To find out more about how we calculate the package prices please visit our
                    <Link Title="FAQ" Href="/faq"/>
                </FormDescription>
            </FormField>
        </AppForm>
    </Content>

    <Footer class="grid gap-2 grid-cols-2">
        @if (Command.VolumetricApplied)
        {
            <FormField class="pointer-events-none">
                <FormLabel for="volumetric-price">Volumetric price</FormLabel>
                <FormInputMoney Id="volumetric-price" Value="Command.VolumetricPrice"/>
            </FormField>
        }

        <FormField class="pointer-events-none">
            <FormLabel for="total-price">Total price</FormLabel>
            <FormInputMoney Id="total-price" Value="Command.Price"/>
        </FormField>
    </Footer>
</Card>

@code {
    private CalculatePriceCommand Command { get; set; } = new();
}