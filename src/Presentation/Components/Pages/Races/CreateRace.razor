@page "/races/new"
@layout HomeLayout
@using Application.Cqrs.Races.Commands
@attribute [Authorize(Roles = "Staff,Admin")]

<PageTitle>@Locale.create_race</PageTitle>

<Card>
    <Header>
        <CardTitle>@Locale.create_race</CardTitle>
    </Header>
    <Content>
        <AppForm @bind-Model="Command" OnValidSubmit="OnValidSubmit">
            <FormField>
                <FormLabel for="name">@Locale.name</FormLabel>
                <FormInputText id="name"
                               disabled="@IsLoading"
                               @bind-Value="@Command.Name"
                               placeholder="Enter flight code"
                               required/>
                <FormDescription>@Locale.flight_code (US1001)</FormDescription>
                <FormInvalidFeedback For="@(() => Command.Name)"/>
            </FormField>

            <InlineFormFieldContainer>
                <FormField>
                    <FormLabel for="origin">@Locale.origin</FormLabel>
                    <FormInputText id="origin"
                                   disabled="@IsLoading"
                                   @bind-Value="@Command.Origin"
                                   placeholder="Enter origin"
                                   required/>
                    <FormDescription>@Locale.airport_name (New York)</FormDescription>
                    <FormInvalidFeedback For="@(() => Command.Origin)"/>
                </FormField>

                <FormField>
                    <FormLabel for="destination">@Locale.destination</FormLabel>
                    <FormInputText id="destination"
                                   disabled="@IsLoading"
                                   @bind-Value="@Command.Destination"
                                   placeholder="Enter destination"
                                   required/>
                    <FormDescription>@Locale.airport_name (Tbilisi)</FormDescription>
                    <FormInvalidFeedback For="@(() => Command.Destination)"/>
                </FormField>
            </InlineFormFieldContainer>

            <InlineFormFieldContainer>
                <FormField>
                    <FormLabel for="takeoff">@Locale.takeoff</FormLabel>
                    <InputDate id="takeoff"
                               class="@FormInputText.BaseClass"
                               Type="InputDateType.Date"
                               @bind-Value="@Command.TakeOff"
                               required/>
                    <FormInvalidFeedback For="@(() => Command.TakeOff)"/>
                </FormField>

                <FormField>
                    <FormLabel for="landing">@Locale.landing</FormLabel>
                    <InputDate id="landing"
                               class="@FormInputText.BaseClass"
                               Type="InputDateType.Date"
                               @bind-Value="@Command.Landing"
                               required/>
                    <FormInvalidFeedback For="@(() => Command.Landing)"/>
                </FormField>
            </InlineFormFieldContainer>

            <Button type="submit" disabled="@IsLoading">
                @if (IsLoading)
                {
                    <Blazicon Svg="Icons.Loader" class="mr-2 size-4 animate-spin"/>
                }
                @Locale.create
            </Button>
        </AppForm>
    </Content>
</Card>

@code {
    private CreateRaceCommand Command { get; set; } = new();

    private async Task OnValidSubmit()
    {
        var result = await SendCommandAsync(Command);
        ShowSuccess($"Race '{result.QualifiedName}' successfully created.");
        Command = new();
    }
}