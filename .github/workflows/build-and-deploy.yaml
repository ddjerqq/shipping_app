name: Build and deploy

on:
  workflow_dispatch:

#  push:
#    branches: [ "master" ]

env:
  NETCORE_VERSION: "9.0.x"
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  test:
    concurrency: ci-${{ github.ref }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4

      - name: Setup dotnet üè¢
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.NETCORE_VERSION }}

      - name: Load cache üîÉ
        id: nuget-cache
        uses: actions/cache@v4
        with:
          path: "~/.nuget/packages"
          key: "${{ runner.os }}-nuget-api-${{ hashFiles('**/*.csproj') }}"
          restore-keys: "${{ runner.os }}-nuget-api-"

      - name: Cache status ‚úÖ
        run: |
          echo "Cache hit: ${{ steps.nuget-cache.outputs.cache-hit }}"

      - name: Restore packages üì¶
        run: dotnet restore --verbosity minimal

      - name: Test üß™
        run: dotnet test --no-restore --verbosity minimal

  call-backup-data:
    uses: https://github.com/ddjerqq/shipping_app/.github/workflows/backup-data.yaml
    concurrency: ci-${{ github.ref }}-${{ github.sha }}
    needs: [ test ]
    secrets: inherit

  build-and-deploy:
    concurrency: ci-${{ github.ref }}
    runs-on: ubuntu-latest
    needs: [ test, call-backup-data ]

    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4

      - name: Set up SSH key üîë
        run: |
          mkdir -v -m 700 $HOME/.ssh
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> $HOME/.ssh/known_hosts
          echo "${{ secrets.SSH_KEY }}" > $HOME/.ssh/id_rsa
          chmod 400 $HOME/.ssh/id_rsa

      - name: Set up QEMU üê¶
        uses: docker/setup-qemu-action@v3
        with:
          platforms: "arm64,amd64"

      - name: Set up Docker Buildx Ô∏è üê≥
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub üîë
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image üê≥
        id: build-push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ddjerqq/shipping:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            USER_ID=1000
            GROUP_ID=1003
            USERNAME=shipping

      - name: Upload local dependencies to the server ‚¨ÜÔ∏è
        run: |
          scp docker-compose.yaml ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/shipping/docker-compose.yaml -p ${{ secrets.SSH_PORT }}
          scp restart.sh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/shipping/restart.sh -p ${{ secrets.SSH_PORT }}
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} -p ${{ secrets.SSH_PORT }} "chmod +x ~/shipping/restart.sh"

      - name: Restart cluster üîÑ
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} -p ${{ secrets.SSH_PORT }} "./restart.sh"
